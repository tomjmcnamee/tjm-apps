{"ast":null,"code":"var _jsxFileName = \"/Users/tommcnamee/Documents/Projects/tjm-games/src/Components/stb-gameBoard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NumberTiles from '../Components/stb-numberTiles';\nimport DiceRoll from '../Components/stb-diceRoll';\n\nclass GameBoard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      board: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n      oneClickIndex: null,\n      comboArray: [],\n      currentRoll: null\n    };\n\n    this.twoSum = function (arr, target) {\n      let result = [];\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n          if (arr[i] + arr[j] === target) {\n            result.push(i);\n            result.push(j);\n          }\n        }\n      }\n\n      return result;\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"TJM - Shut The Box\";\n  } // ends component did\n  //The below output [] if no two numbers in an array add up to target\n  //If 1 or more pair adds up to target, return will be [n1, n2, n3, n4]\n  // where indexes 0+1 = target, as do indexes 2+3 and 4+5, etc\n\n\n  // ends twoSum function \n  render() {\n    let comboArray = this.twoSum(this.state.board, this.props.stb_RollTotal);\n\n    if (!!this.state.board.indexOf(this.props.stb_RollTotal)) {\n      comboArray.push(this.props.RollTotal);\n      console.log(\"you still got moves!\"); // } else if (comboArray.length > 0 ) {\n      // switch (comboArray.length) {\n      //   case 2:\n      //     this.setState({\n      //       comboClick: {comboArray}\n      //     })\n      //     break;\n      //   case 4:\n      //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2)}\n      //     this.setState({\n      //       comboClick: newComboClicks\n      //     })\n      //     break;\n      //   case 6:\n      //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n      //     this.setState({\n      //       comboClick: newComboClicks\n      //     })\n      //     break;\n      //   case 8:\n      //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n      //     this.setState({\n      //       comboClick: newComboClicks\n      //     })\n      //     break;\n      //   case 10:\n      //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n      //     this.setState({\n      //       comboClick: newComboClicks\n      //     })\n      //     break;\n      //   default:\n      //     break;\n      // }\n      //This is where I have to see if any TWO tiles add up to rollSum\n    } else {\n      this.props.youLose();\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(NumberTiles, {\n      numbersInPlay: this.state.board,\n      validOptions: this.state.comboArray,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })) // closes parent div\n    ; // closes RETURN\n  } //closes RENDER\n\n\n} // closes APP\n\n\nfunction mdp(dispatch) {// return { \n  //   stb_RollTotal: (rullSum) => dispatch(stb_RollTotal(rollSum))\n  // }\n}\n\n{\n  /* // this comes from reduct.js - K is local reference, V is foreign state attribute */\n}\n\nfunction msp(state) {\n  return {\n    stb_RollTotal: state.stb_RollTotal\n  };\n}\n\nexport default connect(msp, mdp)(GameBoard);","map":{"version":3,"sources":["/Users/tommcnamee/Documents/Projects/tjm-games/src/Components/stb-gameBoard.js"],"names":["React","connect","NumberTiles","DiceRoll","GameBoard","Component","state","board","oneClickIndex","comboArray","currentRoll","twoSum","arr","target","result","i","length","j","push","componentDidMount","document","title","render","props","stb_RollTotal","indexOf","RollTotal","console","log","youLose","mdp","dispatch","msp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport NumberTiles from '../Components/stb-numberTiles'\nimport DiceRoll from '../Components/stb-diceRoll'\n\n\nclass GameBoard extends React.Component {\n  state = {\n    board: [1,2,3,4,5,6,7,8,9,10,11,12],\n    oneClickIndex: null,\n    comboArray: [],\n    currentRoll: null\n  }\n  componentDidMount(){\n    document.title = \"TJM - Shut The Box\"    \n  }  // ends component did\n\n\n  //The below output [] if no two numbers in an array add up to target\n  //If 1 or more pair adds up to target, return will be [n1, n2, n3, n4]\n  // where indexes 0+1 = target, as do indexes 2+3 and 4+5, etc\n  twoSum = function (arr, target) {\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = i + 1; j < arr.length; j++) {\n        if (arr[i] + arr[j] === target) {\n            result.push(i);\n            result.push(j);\n        }\n      }\n    }\n    return result;\n  } // ends twoSum function \n\n  render() {\n      let comboArray = this.twoSum(this.state.board, this.props.stb_RollTotal)\n      if (!!this.state.board.indexOf(this.props.stb_RollTotal)) {\n          comboArray.push(this.props.RollTotal)\n          console.log(\"you still got moves!\")\n      // } else if (comboArray.length > 0 ) {\n        // switch (comboArray.length) {\n        //   case 2:\n        //     this.setState({\n        //       comboClick: {comboArray}\n        //     })\n        //     break;\n        //   case 4:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   case 6:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   case 8:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   case 10:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   default:\n        //     break;\n        // }\n\n\n\n\n\n        //This is where I have to see if any TWO tiles add up to rollSum\n      } else {\n        this.props.youLose()\n      }\n  \n    \n\n    return(\n\n      <div>\n        <NumberTiles numbersInPlay={this.state.board} validOptions={this.state.comboArray}/>\n      </div> // closes parent div\n    ) // closes RETURN\n  } //closes RENDER\n\n\n}  // closes APP\n\n\n\nfunction mdp(dispatch) { \n  // return { \n  //   stb_RollTotal: (rullSum) => dispatch(stb_RollTotal(rollSum))\n  // }\n}\n\n{/* // this comes from reduct.js - K is local reference, V is foreign state attribute */}\nfunction msp(state) { return { stb_RollTotal: state.stb_RollTotal}}\n\nexport default connect(msp, mdp)(GameBoard)"]},"metadata":{},"sourceType":"module"}
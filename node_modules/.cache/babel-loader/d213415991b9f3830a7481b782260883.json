{"ast":null,"code":"var _jsxFileName = \"/Users/tommcnamee/Documents/Projects/tjm-games/src/Containers/ShutTheBox.js\";\nimport React from 'react';\nimport GameBoard from '../Components/stb-gameBoard';\nimport NumberTiles from '../Components/stb-numberTiles';\nimport DiceRoll from '../Components/stb-diceRoll';\nimport CreateNumberTile from '../Components/stb-createNumberTile';\n\nclass ShutTheBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      board: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n      oneClickIndex: null,\n      comboArray: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n      currentRoll: null\n    };\n\n    this.youLose = () => {\n      //function for when the player LOSES\n      console.log(\"You Lose\");\n    };\n\n    this.youWin = () => {//function for when the player WINS\n    };\n\n    this.twoSum = function (arr, target) {\n      let result = [];\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n          if (arr[i] + arr[j] === target) {\n            result.push(arr[i]);\n            result.push(arr[j]);\n          }\n        }\n      }\n\n      return result;\n    };\n\n    this.rollHandler = rollSum => {\n      console.log(\"roll handler -rollsum: \", rollSum);\n      let newComboArray = this.twoSum(this.state.board, rollSum);\n\n      if (this.state.board.indexOf(rollSum) > -1) {\n        newComboArray.push(rollSum);\n      }\n\n      if (newComboArray.length = 0) {\n        this.youLose();\n      }\n\n      this.setState({\n        comboArray: newComboArray\n      });\n    };\n\n    this.numberClickHandler = number => {\n      // event.preventDefault()\n      console.log(\"click handler\", number);\n\n      if (this.state.comboArray[this.state.comboArray.length - 1] == number) {\n        let newBoard = this.state.board;\n        let indexToDel = newBoard.indexOf(number);\n        newBoard.splice(indexToDel, 1);\n        this.setState({\n          board: newBoard\n        }); // } else if (this.state.comboArray) {\n      }\n    };\n\n    this.numberTiles = () => {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(num => React.createElement(CreateNumberTile, {\n        key: num,\n        number: num,\n        history: this.props.history,\n        NumberAvailable: this.state.board.includes(num),\n        NumberValidOption: this.state.comboArray.includes(num),\n        numberClickHandler: this.numberClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"TJM - Shut The Box\";\n  } // ends component did\n\n\n  render() {\n    console.log(\"comboarr = \", this.state.comboArray); // let comboArray = this.twoSum(this.state.board, this.props.stb_RollTotal)\n    //     if (!!this.state.board.indexOf(this.props.stb_RollTotal)) {\n    //         comboArray.push(this.props.RollTotal)\n    //         console.log(\"you still got moves!\")\n    // } else if (comboArray.length > 0 ) {\n    // switch (comboArray.length) {\n    //   case 2:\n    //     this.setState({\n    //       comboClick: {comboArray}\n    //     })\n    //     break;\n    //   case 4:\n    //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2)}\n    //     this.setState({\n    //       comboClick: newComboClicks\n    //     })\n    //     break;\n    //   case 6:\n    //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n    //     this.setState({\n    //       comboClick: newComboClicks\n    //     })\n    //     break;\n    //   case 8:\n    //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n    //     this.setState({\n    //       comboClick: newComboClicks\n    //     })\n    //     break;\n    //   case 10:\n    //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n    //     this.setState({\n    //       comboClick: newComboClicks\n    //     })\n    //     break;\n    //   default:\n    //     break;\n    // }\n    //This is where I have to see if any TWO tiles add up to rollSum\n    // } else {\n    //   this.props.youLose()\n    // }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(DiceRoll, {\n      rollHandler: this.rollHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.numberTiles()) // closes parent div\n    ; // closes RETURN\n  } //closes RENDER\n\n\n} // closes APP\n\n\nexport default ShutTheBox;","map":{"version":3,"sources":["/Users/tommcnamee/Documents/Projects/tjm-games/src/Containers/ShutTheBox.js"],"names":["React","GameBoard","NumberTiles","DiceRoll","CreateNumberTile","ShutTheBox","Component","state","board","oneClickIndex","comboArray","currentRoll","youLose","console","log","youWin","twoSum","arr","target","result","i","length","j","push","rollHandler","rollSum","newComboArray","indexOf","setState","numberClickHandler","number","newBoard","indexToDel","splice","numberTiles","map","num","props","history","includes","componentDidMount","document","title","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAIA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,CADD;AAENC,MAAAA,aAAa,EAAE,IAFT;AAGNC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,CAHN;AAINC,MAAAA,WAAW,EAAE;AAJP,KAD+B;;AAAA,SAcvCC,OAduC,GAc7B,MAAM;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAjBsC;;AAAA,SAmBvCC,MAnBuC,GAmB9B,MAAM,CACb;AACD,KArBsC;;AAAA,SAuBvCC,MAvBuC,GAuB9B,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC9B,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,aAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGL,GAAG,CAACI,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACvC,cAAIL,GAAG,CAACG,CAAD,CAAH,GAASH,GAAG,CAACK,CAAD,CAAZ,KAAoBJ,MAAxB,EAAgC;AAC5BC,YAAAA,MAAM,CAACI,IAAP,CAAYN,GAAG,CAACG,CAAD,CAAf;AACAD,YAAAA,MAAM,CAACI,IAAP,CAAYN,GAAG,CAACK,CAAD,CAAf;AACH;AACF;AACF;;AACD,aAAOH,MAAP;AACD,KAlCsC;;AAAA,SAoCvCK,WApCuC,GAoCxBC,OAAD,IAAa;AACzBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCW,OAAvC;AACA,UAAIC,aAAa,GAAG,KAAKV,MAAL,CAAY,KAAKT,KAAL,CAAWC,KAAvB,EAA8BiB,OAA9B,CAApB;;AACA,UAAI,KAAKlB,KAAL,CAAWC,KAAX,CAAiBmB,OAAjB,CAAyBF,OAAzB,IAAoC,CAAC,CAAzC,EAA4C;AAC1CC,QAAAA,aAAa,CAACH,IAAd,CAAmBE,OAAnB;AACD;;AACD,UAAIC,aAAa,CAACL,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAKT,OAAL;AACD;;AACD,WAAKgB,QAAL,CAAc;AACZlB,QAAAA,UAAU,EAAEgB;AADA,OAAd;AAGD,KAhDsC;;AAAA,SAkDvCG,kBAlDuC,GAkDjBC,MAAD,IAAY;AAC/B;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BgB,MAA7B;;AACA,UAAI,KAAKvB,KAAL,CAAWG,UAAX,CAAsB,KAAKH,KAAL,CAAWG,UAAX,CAAsBW,MAAtB,GAA8B,CAApD,KAA0DS,MAA9D,EAAsE;AACpE,YAAIC,QAAQ,GAAG,KAAKxB,KAAL,CAAWC,KAA1B;AACA,YAAIwB,UAAU,GAAGD,QAAQ,CAACJ,OAAT,CAAiBG,MAAjB,CAAjB;AACAC,QAAAA,QAAQ,CAACE,MAAT,CAAgBD,UAAhB,EAA4B,CAA5B;AACA,aAAKJ,QAAL,CAAc;AACZpB,UAAAA,KAAK,EAAEuB;AADK,SAAd,EAJoE,CAOtE;AAEC;AACF,KA/DsC;;AAAA,SAmEvCG,WAnEuC,GAmEzB,MAAM;AAClB,aAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA6BC,GAA7B,CAAiCC,GAAG,IAAI,oBAAC,gBAAD;AAC7C,QAAA,GAAG,EAAEA,GADwC;AAE7C,QAAA,MAAM,EAAEA,GAFqC;AAG7C,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAHyB;AAI7C,QAAA,eAAe,EAAE,KAAK/B,KAAL,CAAWC,KAAX,CAAiB+B,QAAjB,CAA0BH,GAA1B,CAJ4B;AAK7C,QAAA,iBAAiB,EAAE,KAAK7B,KAAL,CAAWG,UAAX,CAAsB6B,QAAtB,CAA+BH,GAA/B,CAL0B;AAM7C,QAAA,kBAAkB,EAAE,KAAKP,kBANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,CAAP;AAOD,KA3EsC;AAAA;;AAOvCW,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,oBAAjB;AACD,GATsC,CASpC;;;AAoELC,EAAAA,MAAM,GAAG;AACP9B,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKP,KAAL,CAAWG,UAAtC,EADO,CAEP;AACA;AACA;AACA;AACI;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACF;AACA;AACA;;AAEF,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,WAAW,EAAE,KAAKc,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,KAAKU,WAAL,EAFF,CAFF,CAKS;AALT,KAlDK,CAwDH;AACH,GAtIsC,CAsIrC;;;AAtIqC,C,CAyItC;;;AAEH,eAAe7B,UAAf","sourcesContent":["import React from 'react';\nimport GameBoard from '../Components/stb-gameBoard'\nimport NumberTiles from '../Components/stb-numberTiles'\nimport DiceRoll from '../Components/stb-diceRoll'\nimport CreateNumberTile from '../Components/stb-createNumberTile'\n\n\n\nclass ShutTheBox extends React.Component {\n  state = {\n    board: [1,2,3,4,5,6,7,8,9,10,11,12],\n    oneClickIndex: null,\n    comboArray: [1,2,3,4,5,6,7,8,9,10,11,12],\n    currentRoll: null\n  }\n  componentDidMount(){\n    document.title = \"TJM - Shut The Box\"    \n  }  // ends component did\n\n\n\n\n  youLose = () => {\n    //function for when the player LOSES\n    console.log(\"You Lose\")\n  }\n\n  youWin = () => {\n    //function for when the player WINS\n  }\n\n  twoSum = function (arr, target) {\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = i + 1; j < arr.length; j++) {\n        if (arr[i] + arr[j] === target) {\n            result.push(arr[i]);\n            result.push(arr[j]);\n        }\n      }\n    }\n    return result;\n  } // ends twoSum function \n\n  rollHandler = (rollSum) => {\n    console.log(\"roll handler -rollsum: \", rollSum)\n    let newComboArray = this.twoSum(this.state.board, rollSum)\n    if (this.state.board.indexOf(rollSum) > -1) {\n      newComboArray.push(rollSum)\n    }\n    if (newComboArray.length = 0) {\n      this.youLose()\n    }\n    this.setState({\n      comboArray: newComboArray\n    })\n  } // closes rollHandler\n\n  numberClickHandler = (number) => {\n    // event.preventDefault()\n    console.log(\"click handler\", number)\n    if (this.state.comboArray[this.state.comboArray.length -1] == number) {\n      let newBoard = this.state.board\n      let indexToDel = newBoard.indexOf(number);\n      newBoard.splice(indexToDel, 1);\n      this.setState({\n        board: newBoard\n      })\n    // } else if (this.state.comboArray) {\n\n    }\n  }\n  \n  \n  \n  numberTiles = () => { \n    return [1,2,3,4,5,6,7,8,9,10,11,12].map(num => <CreateNumberTile \n      key={num} \n      number={num} \n      history={this.props.history} \n      NumberAvailable={this.state.board.includes(num)}\n      NumberValidOption={this.state.comboArray.includes(num)}\n      numberClickHandler={this.numberClickHandler} />)\n  }\n\nrender() {\n  console.log(\"comboarr = \", this.state.comboArray)\n  // let comboArray = this.twoSum(this.state.board, this.props.stb_RollTotal)\n  //     if (!!this.state.board.indexOf(this.props.stb_RollTotal)) {\n  //         comboArray.push(this.props.RollTotal)\n  //         console.log(\"you still got moves!\")\n      // } else if (comboArray.length > 0 ) {\n        // switch (comboArray.length) {\n        //   case 2:\n        //     this.setState({\n        //       comboClick: {comboArray}\n        //     })\n        //     break;\n        //   case 4:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   case 6:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   case 8:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   case 10:\n        //     let newComboClicks = {comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2), comboArray.splice(0,2)}\n        //     this.setState({\n        //       comboClick: newComboClicks\n        //     })\n        //     break;\n        //   default:\n        //     break;\n        // }\n\n\n\n\n\n        //This is where I have to see if any TWO tiles add up to rollSum\n      // } else {\n      //   this.props.youLose()\n      // }\n  \n    return(\n\n      <div>\n        <DiceRoll rollHandler={this.rollHandler}/>\n       {this.numberTiles()}\n      </div> // closes parent div\n    ) // closes RETURN\n  } //closes RENDER\n\n\n}  // closes APP\n\nexport default ShutTheBox"]},"metadata":{},"sourceType":"module"}
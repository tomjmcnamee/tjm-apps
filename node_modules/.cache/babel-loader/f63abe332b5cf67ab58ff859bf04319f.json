{"ast":null,"code":"var _jsxFileName = \"/Users/tommcnamee/Documents/Projects/tjm-apps/src/Containers/ShutTheBox.js\";\nimport React from 'react';\nimport GameBoard from '../Components/stb-gameBoard';\nimport NumberTiles from '../Components/stb-numberTiles';\nimport DiceRoll from '../Components/stb-diceRoll';\nimport CreateNumberTile from '../Components/stb-createNumberTile';\nimport { connect } from 'react-redux';\nimport { stb_commitLosingGameToHistory, stb_commitWinningGameToHistory } from '../actions';\n\nclass ShutTheBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      board: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n      comboArray: [],\n      rollSum: 0,\n      gameOver: false,\n      gameWon: false\n    };\n\n    this.youLose = (die1, die2) => {\n      //function for when the player LOSES\n      console.log(\"You Lose\");\n      this.setState({\n        gameOver: true\n      });\n      this.props.stb_commitLosingGameToHistory(this.props.loggedInUserObj.id, this.props.stb_gameDiceRolls, this.props.stb_gameRollSums, die1, die2);\n    };\n\n    this.youWin = () => {\n      console.log(\"You WIN!\");\n      this.setState({\n        board: [],\n        gameOver: true,\n        gameWon: true\n      });\n      this.props.stb_commitWinningGameToHistory(this.props.loggedInUserObj.id, this.props.stb_gameDiceRolls, this.props.stb_gameRollSums);\n    };\n\n    this.twoSum = function (arr, target) {\n      let result = [];\n\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n          if (arr[i] + arr[j] === target) {\n            result.push(arr[i]);\n            result.push(arr[j]);\n          }\n        }\n      }\n\n      return result;\n    };\n\n    this.rollHandler = (die1, die2) => {\n      let newComboArray = this.twoSum(this.state.board, die1 + die2);\n\n      if (this.state.board.indexOf(die1 + die2) > -1) {\n        newComboArray.push(die1 + die2);\n      }\n\n      if (newComboArray.length === 0) {\n        this.youLose(die1, die2);\n      } else {\n        this.setState({\n          comboArray: newComboArray,\n          rollSum: die1 + die2\n        });\n      }\n    };\n\n    this.numberClickHandler = number => {\n      // event.preventDefault()\n      if (this.state.comboArray[this.state.comboArray.length - 1] == number && this.state.comboArray.length % 2 == 1) {\n        let newBoard = this.state.board;\n        let indexToDel = newBoard.indexOf(number);\n        newBoard.splice(indexToDel, 1);\n\n        if (newBoard.length === 0) {\n          this.youWin();\n        } else {\n          this.setState({\n            board: newBoard,\n            comboArray: []\n          });\n        }\n      } else {\n        let newBoard = this.state.board;\n        let indexToDel = newBoard.indexOf(number);\n        newBoard.splice(indexToDel, 1);\n\n        if (newBoard.length === 0) {\n          this.youWin();\n        } else {\n          let newComboArray = [this.state.rollSum - number];\n          this.setState({\n            board: newBoard,\n            comboArray: newComboArray\n          });\n        }\n      }\n    };\n\n    this.newGameHandler = () => {\n      this.setState({\n        board: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        comboArray: [],\n        rollSum: 0,\n        gameOver: false,\n        gameWon: false\n      });\n    };\n\n    this.numberTiles = () => {\n      // debugger\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(num => React.createElement(CreateNumberTile, {\n        key: num,\n        number: num,\n        history: this.props.history,\n        NumberAvailable: this.state.board.includes(num),\n        NumberValidOption: this.state.comboArray.includes(num),\n        FirstRun: this.state.rollSum == 0,\n        numberClickHandler: this.numberClickHandler,\n        gameWon: this.state.gameWon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"TJM - Shut The Box\";\n  } // ends component did\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"master-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(DiceRoll, {\n      rollHandler: this.rollHandler,\n      newGameHandler: this.newGameHandler,\n      gameOver: this.state.gameOver,\n      board: this.state.board,\n      readyToRoll: this.state.comboArray.length > 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), this.numberTiles()) // closes parent div\n    ; // closes RETURN\n  } //closes RENDER\n\n\n} // closes APP\n\n\nfunction mdp(dispatch) {\n  return {\n    stb_commitLosingGameToHistory: (a, b, c, die1, die2) => dispatch(stb_commitLosingGameToHistory(a, b, c, die1, die2)),\n    stb_commitWinningGameToHistory: (a, b, c) => dispatch(stb_commitWinningGameToHistory(a, b, c))\n  };\n}\n\n{\n  /* // this comes from reduct.js - K is local reference, V is foreign state attribute */\n}\n\nfunction msp(state) {\n  return {\n    loggedInUserObj: state.loggedInUserObj,\n    stb_gameDiceRolls: state.stb_gameDiceRolls,\n    stb_gameRollSums: state.stb_gameRollSums,\n    stb_userDiceRolls: state.stb_userDiceRolls,\n    stb_userRollSums: state.stb_userRollSums,\n    stb_allDiceRolls: state.stb_allDiceRolls,\n    stb_allRollSums: state.stb_allRollSums\n  };\n}\n\nexport default connect(msp, mdp)(ShutTheBox);","map":{"version":3,"sources":["/Users/tommcnamee/Documents/Projects/tjm-apps/src/Containers/ShutTheBox.js"],"names":["React","GameBoard","NumberTiles","DiceRoll","CreateNumberTile","connect","stb_commitLosingGameToHistory","stb_commitWinningGameToHistory","ShutTheBox","Component","state","board","comboArray","rollSum","gameOver","gameWon","youLose","die1","die2","console","log","setState","props","loggedInUserObj","id","stb_gameDiceRolls","stb_gameRollSums","youWin","twoSum","arr","target","result","i","length","j","push","rollHandler","newComboArray","indexOf","numberClickHandler","number","newBoard","indexToDel","splice","newGameHandler","numberTiles","map","num","history","includes","componentDidMount","document","title","render","mdp","dispatch","a","b","c","msp","stb_userDiceRolls","stb_userRollSums","stb_allDiceRolls","stb_allRollSums"],"mappings":"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","sourcesContent":["import React from 'react';\nimport GameBoard from '../Components/stb-gameBoard'\nimport NumberTiles from '../Components/stb-numberTiles'\nimport DiceRoll from '../Components/stb-diceRoll'\nimport CreateNumberTile from '../Components/stb-createNumberTile'\nimport { connect } from 'react-redux'\nimport { stb_commitLosingGameToHistory, stb_commitWinningGameToHistory } from '../actions'\n\n\n\n\n\nclass ShutTheBox extends React.Component {\n  state = {\n    board: [1,2,3,4,5,6,7,8,9,10,11,12],\n    comboArray: [],\n    rollSum: 0,\n    gameOver: false,\n    gameWon: false\n  }\n  componentDidMount(){\n    document.title = \"TJM - Shut The Box\" \n  }  // ends component did\n\n\n\n\n  youLose = (die1, die2) => {\n    //function for when the player LOSES\n    console.log(\"You Lose\")\n    this.setState({\n      gameOver: true\n    })\n    this.props.stb_commitLosingGameToHistory(this.props.loggedInUserObj.id, this.props.stb_gameDiceRolls, this.props.stb_gameRollSums, die1, die2)\n  }\n\n  youWin = () => {\n    console.log(\"You WIN!\")\n    this.setState({\n      board: [],\n      gameOver: true,\n      gameWon: true\n    })\n    this.props.stb_commitWinningGameToHistory(this.props.loggedInUserObj.id, this.props.stb_gameDiceRolls, this.props.stb_gameRollSums)\n  }\n\n  twoSum = function (arr, target) {\n    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = i + 1; j < arr.length; j++) {\n        if (arr[i] + arr[j] === target) {\n            result.push(arr[i]);\n            result.push(arr[j]);\n        }\n      }\n    }\n    return result;\n  } // ends twoSum function \n\n  rollHandler = (die1, die2) => {\n    let newComboArray = this.twoSum(this.state.board, die1 + die2)\n    if (this.state.board.indexOf(die1 + die2) > -1) {\n      newComboArray.push(die1 + die2)\n    }\n    if (newComboArray.length === 0) {\n      this.youLose(die1, die2)\n    } else {\n      this.setState({\n        comboArray: newComboArray,\n        rollSum: die1 + die2\n      })\n    }\n  } // closes rollHandler\n\n  numberClickHandler = (number) => {\n    // event.preventDefault()\n    if (this.state.comboArray[this.state.comboArray.length -1] == number &&  this.state.comboArray.length%2 == 1) {\n      let newBoard = this.state.board\n      let indexToDel = newBoard.indexOf(number);\n      newBoard.splice(indexToDel, 1);\n      if (newBoard.length === 0) {\n        this.youWin()\n      } else {\n        this.setState({\n          board: newBoard,\n          comboArray: []\n        })\n      }\n    } else {\n      let newBoard = this.state.board\n      let indexToDel = newBoard.indexOf(number);\n      newBoard.splice(indexToDel, 1);\n      if (newBoard.length === 0) {\n        this.youWin()\n      } else {\n        let newComboArray = [this.state.rollSum - number]\n        this.setState({\n          board: newBoard,\n          comboArray: newComboArray,\n        })\n      }\n\n    }\n    \n  }\n  \n  newGameHandler = () => {\n    this.setState({\n      board: [1,2,3,4,5,6,7,8,9,10,11,12],\n      comboArray: [],\n      rollSum: 0,\n      gameOver: false,\n      gameWon: false\n    })\n  }\n  \n  \n  numberTiles = () => { \n    // debugger\n    return [1,2,3,4,5,6,7,8,9,10,11,12].map(num => <CreateNumberTile \n      key={num} \n      number={num} \n      history={this.props.history} \n      NumberAvailable={this.state.board.includes(num)}\n      NumberValidOption={this.state.comboArray.includes(num)}\n      FirstRun={this.state.rollSum == 0}\n      numberClickHandler={this.numberClickHandler}\n      gameWon={this.state.gameWon} />)\n  }\n\nrender() {\n\n  \n    return(\n\n      <div id=\"master-div\">\n        <DiceRoll rollHandler={this.rollHandler} newGameHandler={this.newGameHandler} gameOver={this.state.gameOver} board={this.state.board} readyToRoll={this.state.comboArray.length > 0} />\n       {this.numberTiles()}\n      </div> // closes parent div\n    ) // closes RETURN\n  } //closes RENDER\n\n\n}  // closes APP\nfunction mdp(dispatch) { \n  return { \n    stb_commitLosingGameToHistory: (a, b, c,die1, die2) => dispatch(stb_commitLosingGameToHistory(a, b, c, die1, die2)),\n    stb_commitWinningGameToHistory: (a, b, c) => dispatch(stb_commitWinningGameToHistory(a, b, c)),\n\n  }\n}\n\n{/* // this comes from reduct.js - K is local reference, V is foreign state attribute */}\nfunction msp(state) { return { \n  loggedInUserObj: state.loggedInUserObj,\n  stb_gameDiceRolls: state.stb_gameDiceRolls,\n  stb_gameRollSums: state.stb_gameRollSums,\n  stb_userDiceRolls: state.stb_userDiceRolls,\n  stb_userRollSums: state.stb_userRollSums,\n  stb_allDiceRolls: state.stb_allDiceRolls,\n  stb_allRollSums: state.stb_allRollSums\n}}\n\nexport default connect(msp, mdp)(ShutTheBox)\n"]},"metadata":{},"sourceType":"module"}
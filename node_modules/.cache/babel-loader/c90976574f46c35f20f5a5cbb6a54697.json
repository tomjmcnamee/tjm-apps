{"ast":null,"code":"var _jsxFileName = \"/Users/tommcnamee/Documents/Projects/tjm-apps/src/Containers/TopMenuBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { logUserIn, logOut, autoLogIn } from '../actions';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom'; // import 'semantic-ui-css/semantic.min.css'\n\nclass TopMenuBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.logOutHandler = () => {\n      this.props.logOut(this.props.history);\n    };\n\n    this.redirectToRoute = path => {\n      this.props.history.push(path);\n    };\n  }\n\n  componentDidMount() {\n    this.props.autoLogIn();\n  }\n\n  render() {\n    // Determine if Log In or Log Out button\n    let topButton = \"\";\n    let welcomeMessage = \"\";\n\n    if (localStorage.token === undefined || localStorage.token === \"undefined\" || this.props.loggedInUserObj === undefined || this.props.loggedInUserObj.id === undefined) {\n      topButton = React.createElement(\"a\", {\n        href: \"/LogIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" \", React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Log In or Sign Up\"), \" \");\n      welcomeMessage = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"You are currently playing under the Guest account  \", topButton);\n    } else {\n      topButton = React.createElement(\"button\", {\n        onClick: this.logOutHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Log Out\");\n      welcomeMessage = React.createElement(\"h6\", {\n        id: \"welcomeBackInHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Welcome back, \", this.props.loggedInUserObj.first_name, \"   \", topButton, \" \");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"userNameAndbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, welcomeMessage));\n  } // ends Return and Render\n\n\n} // ends class\n\n\nfunction mdp(dispatch) {\n  return {\n    logUserIn: (path, accountCredentials, history) => dispatch(logUserIn(path, accountCredentials, history)),\n    logOut: arg1 => dispatch(logOut(arg1)),\n    autoLogIn: () => dispatch(autoLogIn())\n  };\n} // this comes from reduct.js - K is local reference, V is foreign state attribute\n\n\nfunction msp(state) {\n  return {\n    loggedInUserObj: state.loggedInUserObj\n  };\n}\n\nexport default connect(msp, mdp)(TopMenuBar);","map":{"version":3,"sources":["/Users/tommcnamee/Documents/Projects/tjm-apps/src/Containers/TopMenuBar.js"],"names":["React","connect","logUserIn","logOut","autoLogIn","BrowserRouter","Route","Switch","Link","TopMenuBar","Component","logOutHandler","props","history","redirectToRoute","path","push","componentDidMount","render","topButton","welcomeMessage","localStorage","token","undefined","loggedInUserObj","id","first_name","mdp","dispatch","accountCredentials","arg1","msp","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,YAA7C;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,IAAvC,QAAmD,kBAAnD,C,CACA;;AASA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAMvCC,aANuC,GAMvB,MAAM;AACpB,WAAKC,KAAL,CAAWT,MAAX,CAAkB,KAAKS,KAAL,CAAWC,OAA7B;AACD,KARsC;;AAAA,SAUvCC,eAVuC,GAUpBC,IAAD,IAAU;AAC1B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,IAAnB,CAAwBD,IAAxB;AACD,KAZsC;AAAA;;AAEvCE,EAAAA,iBAAiB,GAAE;AACjB,SAAKL,KAAL,CAAWR,SAAX;AACD;;AAWDc,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,cAAc,GAAG,EAArB;;AACA,QAAKC,YAAY,CAACC,KAAb,KAAuBC,SAAvB,IAAoCF,YAAY,CAACC,KAAb,KAAuB,WAA5D,IAA8E,KAAKV,KAAL,CAAWY,eAAX,KAA+BD,SAA/B,IAA4C,KAAKX,KAAL,CAAWY,eAAX,CAA2BC,EAA3B,KAAkCF,SAAhK,EAA4K;AAC1KJ,MAAAA,SAAS,GAAI;AAAG,QAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAnB,MAAb;AACAC,MAAAA,cAAc,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAAwDD,SAAxD,CAAjB;AACF,KAHA,MAGM;AACJA,MAAAA,SAAS,GAAG;AAAQ,QAAA,OAAO,EAAE,KAAKR,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;AACAS,MAAAA,cAAc,GAAI;AAAI,QAAA,EAAE,EAAC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6C,KAAKR,KAAL,CAAWY,eAAX,CAA2BE,UAAxE,SAAuFP,SAAvF,MAAlB;AACF;;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGC,cAFH,CADF,CADF;AAaA,GA1CqC,CA0CpC;;;AA1CoC,C,CA2CvC;;;AAEF,SAASO,GAAT,CAAaC,QAAb,EAAuB;AACrB,SAAO;AAAE1B,IAAAA,SAAS,EAAE,CAACa,IAAD,EAAOc,kBAAP,EAA2BhB,OAA3B,KAAuCe,QAAQ,CAAC1B,SAAS,CAACa,IAAD,EAAOc,kBAAP,EAA2BhB,OAA3B,CAAV,CAA5D;AACLV,IAAAA,MAAM,EAAG2B,IAAD,IAAUF,QAAQ,CAACzB,MAAM,CAAC2B,IAAD,CAAP,CADrB;AAEL1B,IAAAA,SAAS,EAAE,MAAMwB,QAAQ,CAACxB,SAAS,EAAV;AAFpB,GAAP;AAGD,C,CAED;;;AACA,SAAS2B,GAAT,CAAaC,KAAb,EAAoB;AAClB,SAAO;AAAER,IAAAA,eAAe,EAAEQ,KAAK,CAACR;AAAzB,GAAP;AACD;;AAED,eAAevB,OAAO,CAAC8B,GAAD,EAAMJ,GAAN,CAAP,CAAkBlB,UAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { logUserIn, logOut, autoLogIn } from '../actions'\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom'\n// import 'semantic-ui-css/semantic.min.css'\n\n\n\n\n\n\n\n\nclass TopMenuBar extends React.Component {\n\n  componentDidMount(){\n    this.props.autoLogIn()\n  }\n\n  logOutHandler = () => {\n    this.props.logOut(this.props.history)\n  }\n  \n  redirectToRoute = (path) => {\n    this.props.history.push(path)\n  }\n    \n\n  render() {\n    // Determine if Log In or Log Out button\n    let topButton = \"\"\n    let welcomeMessage = \"\"\n    if ((localStorage.token === undefined || localStorage.token === \"undefined\" ) || (this.props.loggedInUserObj === undefined || this.props.loggedInUserObj.id === undefined)) {\n      topButton =  <a href=\"/LogIn\" > <button>Log In or Sign Up</button> </a>\n      welcomeMessage = <h6>You are currently playing under the Guest account  {topButton}</h6>\n   } else {\n      topButton = <button onClick={this.logOutHandler}  >Log Out</button>\n      welcomeMessage =  <h6 id=\"welcomeBackInHeader\" >Welcome back, {this.props.loggedInUserObj.first_name}   {topButton} </h6>\n   }\n\n\n  \n    return (\n      <div>\n        <div id=\"userNameAndbutton\">\n          {/* {this.props.loggedInUserObj === undefined || this.props.loggedInUserObj.id === undefined ? null : <h1 id=\"welcomeBackInHeader\" >Welcome back, {this.props.loggedInUserObj.first_name} </h1>} */}\n          {welcomeMessage}\n\n        </div>\n      </div>\n\n\n\n\n  \n  )} // ends Return and Render\n} // ends class\n\nfunction mdp(dispatch) {\n  return { logUserIn: (path, accountCredentials, history) => dispatch(logUserIn(path, accountCredentials, history)),\n    logOut: (arg1) => dispatch(logOut(arg1)),\n    autoLogIn: () => dispatch(autoLogIn())}\n}\n\n// this comes from reduct.js - K is local reference, V is foreign state attribute\nfunction msp(state) {\n  return { loggedInUserObj: state.loggedInUserObj} \n}\n\nexport default connect(msp, mdp)(TopMenuBar) "]},"metadata":{},"sourceType":"module"}